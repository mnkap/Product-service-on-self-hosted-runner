name: BuildPush DockerImage

on:
  push:
    branches:
      - main
env:
  SSH_KEY_GITHUB_ACTIONS: ${{ secrets.SSH_PRIVATE_KEY }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
  VPS_IP: ${{ secrets.VPS_IP }}
  PORT: ${{ secrets.PORT }}
                      
jobs:
  build-push-attempt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/productservice:latest
       
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
    
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:server
      - name: Deploy local server
        run: |
            ssh -p ${{ secrets.PORT }} -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}
            docker image pull ${{ secrets.DOCKERHUB_USERNAME/productservice:latest }}
            docker container run -d -p 8080:80 --name netapp ${{ secrets.DOCKERHUB_USERNAME }}/productservice:latest
    
          
      # - name: Deploy local server
      #   run: |
      #       eval $(ssh-agent -s)
      #       echo "$SSH_KEY_GITHUB_ACTIONS" | ssh-add -
      #       echo "Connecting to VPS: $VPS_USERNAME@$VPS_IP"

      #       ssh -p "$PORT" -o StrictHostKeyChecking=no "$VPS_USERNAME"@"$VPS_IP" << 'EOF'
      #       docker image pull "$DOCKERHUB_USERNAME"/productservice:latest
      #       docker container run -d -p 8080:80 --name netapp "$DOCKERHUB_USERNAME"/productservice:latest
      #       EOF
        
        